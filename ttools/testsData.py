#!/usr/bin/env python
# -*- coding: utf-8 -*-

LCextraSets = [('dcroat', 'd', 'widthAndPosition'),
               ('hbar', 'h', 'widthAndPosition'),
               ('oslash', 'o', 'widthAndPosition'),
               ('longs', 'f', 'widthAndPosition'),
               ('tcaron', 't', 'width'),
               ('tbar', 't', 'width'),
               ('dcaron', 'd', 'left'),
               ('lslash', 'l', 'left'),
               ('ldot', 'l', 'left'),
               ('lcaron', 'l', 'left'),
               ('eng', 'n', 'left'),
               ('thorn', 'p', 'right')]


UCExtraSets = [('D', 'Eth', 'bottom'),
               ('D', 'Dcroat', 'bottom'),
               ('H', 'Hbar', 'middle'),
               ('L', 'Lslash', 'bottom'),
               ('L', 'Ldot', 'bottom'),
               ('L', 'Lcaron', 'bottom'),
               ('N', 'Eng', 'middle'),
               ('O', 'Oslash', 'middle'),
               ('T', 'Tbar', 'bottom')]


LCligaturesSets = [('a', 'ae', 'e'),
                   ('o', 'oe', 'e'),
                   ('f', 'f_j', 'j'),
                   ('f', 'f_b', 'b'),
                   ('f', 'f_h', 'h'),
                   ('f', 'f_k', 'k'),
                   ('f', 'f_t', 't'),
                   ('t', 't_t', 't'),
                   ('t', 't_f', 'f'),
                   ('f', 'ffi', 'i'),
                   ('f', 'f_f_j', 'j'),
                   ('f', 'ffl', 'l'),
                   ('f', 'f_f_b', 'b'),
                   ('f', 'f_f_h', 'h'),
                   ('f', 'f_f_k', 'k'),
                   ('f', 'f_f_t', 't')]


interpunctionSets = [('period', 'comma', 'colon', 'semicolon'),
                     ('parenleft', 'parenright'),
                     ('bracketleft', 'bracketright'),
                     ('braceleft', 'braceright'),
                     ('parenleft.cap', 'parenright.cap'),
                     ('bracketleft.cap', 'bracketright.cap'),
                     ('braceleft.cap', 'braceright.cap'),
                     ('parenleft.sc', 'parenright.sc'),
                     ('bracketleft.sc', 'bracketright.sc'),
                     ('braceleft.sc', 'braceright.sc'),
                     ('exclam', 'exclamdown'),
                     ('question', 'questiondown'),
                     ('exclam.sc', 'exclamdown.sc'),
                     ('question.sc', 'questiondown.sc'),
                     ('bar', 'brokenbar'),
                     ('guilsinglleft', 'guilsinglright', 'guilsinglleft.sc', 'guilsinglright.sc', 'guilsinglleft.cap', 'guilsinglright.cap'),
                     ('guillemotleft', 'guillemotright', 'guillemotleft.sc', 'guillemotright.sc', 'guillemotleft.cap', 'guillemotright.cap'),
                     ('dagger', 'daggerdbl'),
                     ('dagger.sc', 'daggerdbl.sc'),
                     ('quotesinglbase', 'quoteleft', 'quoteright', 'quoteleft.sc', 'quoteright.sc'),
                     ('quotedblbase', 'quotedblleft', 'quotedblright', 'quotedblleft.sc', 'quotedblright.sc'),
                     ('asterisk', 'asterisk.sc'),
                     ('slash', 'backslash'),
                     ('hyphen', 'hyphen.sc', 'hyphen.cap'),
                     ('endash', 'endash.sc', 'endash.cap'),
                     ('emdash', 'emdash.sc', 'emdash.cap'),
                     ('copyright', 'registered'),
                     ('copyright.sc', 'registered.sc')]

verticalGlyphSets = [('parenleft', 'parenright', 'bracketleft', 'bracketright'),
                     ('parenleft.cap', 'parenright.cap', 'bracketleft.cap', 'bracketright.cap'),
                     ('parenleft.sc', 'parenright.sc', 'bracketleft.sc', 'bracketright.sc'),
                     ('braceleft', 'braceright'),
                     ('braceleft.cap', 'braceright.cap'),
                     ('braceleft.sc', 'braceright.sc'),
                     ('guilsinglleft', 'guilsinglright', 'guillemotleft', 'guillemotright'),
                     ('guilsinglleft.sc', 'guilsinglright.sc', 'guillemotleft.sc', 'guillemotright.sc'),
                     ('guilsinglleft.cap', 'guilsinglright.cap', 'guillemotleft.cap', 'guillemotright.cap'),
                     ('slash', 'backslash'),
                     ('quotesinglbase', 'quotedblbase'),
                     ('quoteleft', 'quoteright', 'quotedblleft', 'quotedblright'),
                     ('quoteleft.sc', 'quoteright.sc', 'quotedblleft.sc', 'quotedblright.sc'),
                     ('copyright', 'registered'),
                     ('copyright.sc', 'registered.sc')]

digitsNames = ['figurespace', 'zero', 'one', 'two', 'three', 'four',
               'five', 'six', 'seven', 'eight', 'nine', 'slashedzero', 'currency',
               'dollar', 'Euro', 'yen', 'sterling', 'florin', 'cent', 'plus',
               'minus', 'multiply', 'divide', 'equal', 'less', 'greater',
               'plusminus', 'lessequal', 'greaterequal', 'notequal', 'logicalnot',
               'asciicircum', 'asciitilde', 'approxequal', 'infinity', 'plus.cap',
               'minus.cap', 'multiply.cap', 'divide.cap', 'equal.cap', 'less.cap',
               'greater.cap', 'plusminus.cap', 'lessequal.cap', 'greaterequal.cap',
               'notequal.cap', 'logicalnot.cap', 'asciitilde.cap', 'approxequal.cap',
               'infinity.cap', 'zero.sc', 'one.sc', 'two.sc', 'three.sc', 'four.sc',
               'five.sc', 'six.sc', 'seven.sc', 'eight.sc', 'nine.sc',
               'slashedzero.sc', 'currency.sc', 'dollar.sc', 'Euro.sc', 'yen.sc',
               'sterling.sc', 'florin.sc', 'cent.sc', 'plus.sc', 'minus.sc',
               'multiply.sc', 'divide.sc', 'equal.sc', 'less.sc', 'greater.sc',
               'plusminus.sc', 'lessequal.sc', 'greaterequal.sc', 'notequal.sc',
               'logicalnot.sc', 'asciitilde.sc', 'approxequal.sc', 'numbersign.sc',
               'infinity.sc']

figuresDict = {'tabularLining': ['figurespace', 'zero', 'one', 'two', 'three', 'four',
                                 'five', 'six', 'seven', 'eight', 'nine', 'slashedzero',
                                 'currency', 'dollar', 'Euro', 'yen', 'sterling', 'florin', 'cent'],

               'tabularOS': ['zero.tosf', 'one.tosf', 'two.tosf', 'three.tosf', 'four.tosf', 'five.tosf',
                             'six.tosf', 'seven.tosf', 'eight.tosf', 'nine.tosf', 'zero.tosf.zero'],

               'tabularSC': ['zero.sc', 'one.sc', 'two.sc', 'three.sc', 'four.sc', 'five.sc', 'six.sc', 'seven.sc',
                      'eight.sc', 'nine.sc', 'slashedzero.sc', 'currency.sc', 'dollar.sc', 'Euro.sc',
                      'yen.sc', 'sterling.sc', 'florin.sc', 'cent.sc'],

               'math': ['plus', 'minus', 'multiply', 'divide', 'equal', 'less', 'greater', 'plusminus',
                        'lessequal', 'greaterequal', 'notequal', 'logicalnot', 'asciicircum', 'asciitilde',
                        'approxequal', 'infinity', 'plus.cap', 'minus.cap', 'multiply.cap', 'divide.cap',
                        'equal.cap', 'less.cap', 'greater.cap', 'plusminus.cap', 'lessequal.cap',
                        'greaterequal.cap', 'notequal.cap', 'logicalnot.cap', 'asciitilde.cap',
                        'approxequal.cap', 'infinity.cap'],

               'mathSC': ['plus.sc', 'minus.sc', 'multiply.sc', 'divide.sc',
                          'equal.sc', 'less.sc', 'greater.sc', 'plusminus.sc', 'lessequal.sc', 'greaterequal.sc',
                          'notequal.sc', 'logicalnot.sc', 'asciitilde.sc', 'approxequal.sc', 'numbersign.sc',
                          'infinity.sc']
                }

fractionBase = ['onehalf','onethird','twothirds','onequarter','threequarters','onefifth',
                 'twofifths','threefifths','fourfifths','onesixth','fivesixths','oneeight',
                 'threeeights','fiveeights','seveneights', 'percent']

dnomNumInfSupBaseGlyphs = ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z','zero','one','two','three','four','five','six','seven','eight','nine','dollar','cent','Euro','plus','minus','equal','period','comma','hyphen','parenleft','parenright',]
dnomNumInfSupNewSuffixes = ['dnom', 'inf', 'sup', 'num']
dnomNumInfSupOldSuffixes = ['dnom', 'sinf', 'sups', 'numr']

accentedDict = {

    # little hack for dotlessi dotlessj
    'dotlessi': ('i', ('', ''), ''),
    'dotlessj': ('j', ('', ''), ''),

    #uppercase
    'Agrave': ('A', ('grave', 'grave.cap'), '_top'),
    'Egrave': ('E', ('grave', 'grave.cap'), '_top'),
    'Igrave': ('I', ('grave', 'grave.cap'), '_top'),
    'Ograve': ('O', ('grave', 'grave.cap'), '_top'),
    'Ugrave': ('U', ('grave', 'grave.cap'), '_top'),
    'Wgrave': ('W', ('grave', 'grave.cap'), '_top'),
    'Ygrave': ('Y', ('grave', 'grave.cap'), '_top'),

    'AEacute': ('AE', ('acute', 'acute.cap'), '_top'),
    'Aacute': ('A', ('acute', 'acute.cap'), '_top'),
    'Cacute': ('C', ('acute', 'acute.cap'), '_top'),
    'Eacute': ('E', ('acute', 'acute.cap'), '_top'),
    'Iacute': ('I', ('acute', 'acute.cap'), '_top'),
    'Lacute': ('L', ('acute', 'acute.cap'), '_top'),
    'Nacute': ('N', ('acute', 'acute.cap'), '_top'),
    'Oacute': ('O', ('acute', 'acute.cap'), '_top'),
    'Oslashacute': ('Oslash', ('acute', 'acute.cap'), '_top'),
    'Racute': ('R', ('acute', 'acute.cap'), '_top'),
    'Sacute': ('S', ('acute', 'acute.cap'), '_top'),
    'Uacute': ('U', ('acute', 'acute.cap'), '_top'),
    'Wacute': ('W', ('acute', 'acute.cap'), '_top'),
    'Yacute': ('Y', ('acute', 'acute.cap'), '_top'),
    'Zacute': ('Z', ('acute', 'acute.cap'), '_top'),

    'Ohungarumlaut': ('O', ('hungarumlaut', 'hungarumlaut.cap'), '_top'),
    'Uhungarumlaut': ('U', ('hungarumlaut', 'hungarumlaut.cap'), '_top'),

    'Cdotaccent': ('C', ('dotaccent', 'dotaccent.cap'), '_top'),
    'Edotaccent': ('E', ('dotaccent', 'dotaccent.cap'), '_top'),
    'Gdotaccent': ('G', ('dotaccent', 'dotaccent.cap'), '_top'),
    'Idotaccent': ('I', ('dotaccent', 'dotaccent.cap'), '_top'),
    'Zdotaccent': ('Z', ('dotaccent', 'dotaccent.cap'), '_top'),

    'Adieresis': ('A', ('dieresis', 'dieresis.cap'), '_top'),
    'Edieresis': ('E', ('dieresis', 'dieresis.cap'), '_top'),
    'Idieresis': ('I', ('dieresis', 'dieresis.cap'), '_top'),
    'Odieresis': ('O', ('dieresis', 'dieresis.cap'), '_top'),
    'Udieresis': ('U', ('dieresis', 'dieresis.cap'), '_top'),
    'Wdieresis': ('W', ('dieresis', 'dieresis.cap'), '_top'),
    'Ydieresis': ('Y', ('dieresis', 'dieresis.cap'), '_top'),

    'Acircumflex': ('A', ('circumflex', 'circumflex.cap'), '_top'),
    'Ccircumflex': ('C', ('circumflex', 'circumflex.cap'), '_top'),
    'Ecircumflex': ('E', ('circumflex', 'circumflex.cap'), '_top'),
    'Gcircumflex': ('G', ('circumflex', 'circumflex.cap'), '_top'),
    'Hcircumflex': ('H', ('circumflex', 'circumflex.cap'), '_top'),
    'Icircumflex': ('I', ('circumflex', 'circumflex.cap'), '_top'),
    'Jcircumflex': ('J', ('circumflex', 'circumflex.cap'), '_top'),
    'Ocircumflex': ('O', ('circumflex', 'circumflex.cap'), '_top'),
    'Scircumflex': ('S', ('circumflex', 'circumflex.cap'), '_top'),
    'Ucircumflex': ('U', ('circumflex', 'circumflex.cap'), '_top'),
    'Wcircumflex': ('W', ('circumflex', 'circumflex.cap'), '_top'),
    'Ycircumflex': ('Y', ('circumflex', 'circumflex.cap'), '_top'),

    'Ccaron': ('C', ('caron', 'caron.cap'), '_top'),
    'Dcaron': ('D', ('caron', 'caron.cap'), '_top'),
    'Ecaron': ('E', ('caron', 'caron.cap'), '_top'),
    'Ncaron': ('N', ('caron', 'caron.cap'), '_top'),
    'Rcaron': ('R', ('caron', 'caron.cap'), '_top'),
    'Scaron': ('S', ('caron', 'caron.cap'), '_top'),
    'Tcaron': ('T', ('caron', 'caron.cap'), '_top'),
    'Zcaron': ('Z', ('caron', 'caron.cap'), '_top'),
    'Lcaron': ('L', ('caronquoteright', 'caronquoteright.cap'), '_top'),

    'Amacron': ('A', ('macron', 'macron.cap'), '_top'),
    'Emacron': ('E', ('macron', 'macron.cap'), '_top'),
    'Imacron': ('I', ('macron', 'macron.cap'), '_top'),
    'Omacron': ('O', ('macron', 'macron.cap'), '_top'),
    'Umacron': ('U', ('macron', 'macron.cap'), '_top'),

    'Atilde': ('A', ('tilde', 'tilde.cap'), '_top'),
    'Itilde': ('I', ('tilde', 'tilde.cap'), '_top'),
    'Ntilde': ('N', ('tilde', 'tilde.cap'), '_top'),
    'Otilde': ('O', ('tilde', 'tilde.cap'), '_top'),
    'Utilde': ('U', ('tilde', 'tilde.cap'), '_top'),

    'Abreve': ('A', ('breve', 'breve.cap'), '_top'),
    'Ebreve': ('E', ('breve', 'breve.cap'), '_top'),
    'Gbreve': ('G', ('breve', 'breve.cap'), '_top'),
    'Ibreve': ('I', ('breve', 'breve.cap'), '_top'),
    'Obreve': ('O', ('breve', 'breve.cap'), '_top'),
    'Ubreve': ('U', ('breve', 'breve.cap'), '_top'),

    'Aring': ('A', ('ring', 'ring.cap'), '_top'),
    'Uring': ('U', ('ring', 'ring.cap'), '_top'),

    'Gcommaaccent': ('G', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Kcommaaccent': ('K', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Lcommaaccent': ('L', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Ncommaaccent': ('N', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Rcommaaccent': ('R', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Scommaaccent': ('S', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Tcommaaccent': ('T', ('cedilla', 'cedilla.cap'), '_bottom'),

    'Aogonek': ('A', ('ogonek', 'ogonek.cap'), '_bottom'),
    'Eogonek': ('E', ('ogonek', 'ogonek.cap'), '_bottom'),
    'Iogonek': ('I', ('ogonek', 'ogonek.cap'), '_bottom'),
    'Uogonek': ('U', ('ogonek', 'ogonek.cap'), '_bottom'),

    'Ccedilla': ('C', ('cedilla', 'cedilla.cap'), '_bottom'),
    'Scedilla': ('S', ('cedilla', 'cedilla.cap'), '_bottom'),
    'Gcedilla': ('G', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Kcedilla': ('K', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Lcedilla': ('L', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Ncedilla': ('N', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'Rcedilla': ('R', ('commaaccent', 'commaaccent.cap'), '_bottom'),

    # small caps
    'agrave.sc': ('a.sc', ('grave', 'grave.cap'), '_top'),
    'egrave.sc': ('e.sc', ('grave', 'grave.cap'), '_top'),
    'igrave.sc': ('i.sc', ('grave', 'grave.cap'), '_top'),
    'ograve.sc': ('o.sc', ('grave', 'grave.cap'), '_top'),
    'ugrave.sc': ('u.sc', ('grave', 'grave.cap'), '_top'),
    'wgrave.sc': ('w.sc', ('grave', 'grave.cap'), '_top'),
    'ygrave.sc': ('y.sc', ('grave', 'grave.cap'), '_top'),

    'aeacute.sc': ('ae.sc', ('acute', 'acute.cap'), '_top'),
    'aacute.sc': ('a.sc', ('acute', 'acute.cap'), '_top'),
    'cacute.sc': ('c.sc', ('acute', 'acute.cap'), '_top'),
    'eacute.sc': ('e.sc', ('acute', 'acute.cap'), '_top'),
    'iacute.sc': ('i.sc', ('acute', 'acute.cap'), '_top'),
    'lacute.sc': ('l.sc', ('acute', 'acute.cap'), '_top'),
    'nacute.sc': ('n.sc', ('acute', 'acute.cap'), '_top'),
    'oacute.sc': ('o.sc', ('acute', 'acute.cap'), '_top'),
    'oslashacute.sc': ('oslash.sc', ('acute', 'acute.cap'), '_top'),
    'racute.sc': ('r.sc', ('acute', 'acute.cap'), '_top'),
    'sacute.sc': ('s.sc', ('acute', 'acute.cap'), '_top'),
    'uacute.sc': ('u.sc', ('acute', 'acute.cap'), '_top'),
    'wacute.sc': ('w.sc', ('acute', 'acute.cap'), '_top'),
    'yacute.sc': ('y.sc', ('acute', 'acute.cap'), '_top'),
    'zacute.sc': ('z.sc', ('acute', 'acute.cap'), '_top'),

    'ohungarumlaut.sc': ('o.sc', ('hungarumlaut', 'hungarumlaut.cap'), '_top'),
    'uhungarumlaut.sc': ('u.sc', ('hungarumlaut', 'hungarumlaut.cap'), '_top'),

    'cdotaccent.sc': ('c.sc', ('dotaccent', 'dotaccent.cap'), '_top'),
    'edotaccent.sc': ('e.sc', ('dotaccent', 'dotaccent.cap'), '_top'),
    'gdotaccent.sc': ('g.sc', ('dotaccent', 'dotaccent.cap'), '_top'),
    'idotaccent.sc': ('i.sc', ('dotaccent', 'dotaccent.cap'), '_top'),
    'zdotaccent.sc': ('z.sc', ('dotaccent', 'dotaccent.cap'), '_top'),

    'adieresis.sc': ('a.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'edieresis.sc': ('e.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'idieresis.sc': ('i.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'odieresis.sc': ('o.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'udieresis.sc': ('u.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'wdieresis.sc': ('w.sc', ('dieresis', 'dieresis.cap'), '_top'),
    'ydieresis.sc': ('y.sc', ('dieresis', 'dieresis.cap'), '_top'),

    'acircumflex.sc': ('a.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'ccircumflex.sc': ('c.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'ecircumflex.sc': ('e.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'gcircumflex.sc': ('g.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'hcircumflex.sc': ('h.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'icircumflex.sc': ('i.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'jcircumflex.sc': ('j.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'ocircumflex.sc': ('o.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'scircumflex.sc': ('s.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'ucircumflex.sc': ('u.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'wcircumflex.sc': ('w.sc', ('circumflex', 'circumflex.cap'), '_top'),
    'ycircumflex.sc': ('y.sc', ('circumflex', 'circumflex.cap'), '_top'),

    'ccaron.sc': ('c.sc', ('caron', 'caron.cap'), '_top'),
    'dcaron.sc': ('d.sc', ('caron', 'caron.cap'), '_top'),
    'ecaron.sc': ('e.sc', ('caron', 'caron.cap'), '_top'),
    'ncaron.sc': ('n.sc', ('caron', 'caron.cap'), '_top'),
    'rcaron.sc': ('r.sc', ('caron', 'caron.cap'), '_top'),
    'scaron.sc': ('s.sc', ('caron', 'caron.cap'), '_top'),
    'tcaron.sc': ('t.sc', ('caron', 'caron.cap'), '_top'),
    'zcaron.sc': ('z.sc', ('caron', 'caron.cap'), '_top'),
    'lcaron.sc': ('l.sc', ('caronquoteright', 'caronquoteright.cap'), '_top'),

    'amacron.sc': ('a.sc', ('macron', 'macron.cap'), '_top'),
    'emacron.sc': ('e.sc', ('macron', 'macron.cap'), '_top'),
    'imacron.sc': ('i.sc', ('macron', 'macron.cap'), '_top'),
    'omacron.sc': ('o.sc', ('macron', 'macron.cap'), '_top'),
    'umacron.sc': ('u.sc', ('macron', 'macron.cap'), '_top'),

    'atilde.sc': ('a.sc', ('tilde', 'tilde.cap'), '_top'),
    'itilde.sc': ('i.sc', ('tilde', 'tilde.cap'), '_top'),
    'ntilde.sc': ('n.sc', ('tilde', 'tilde.cap'), '_top'),
    'otilde.sc': ('o.sc', ('tilde', 'tilde.cap'), '_top'),
    'utilde.sc': ('u.sc', ('tilde', 'tilde.cap'), '_top'),

    'abreve.sc': ('a.sc', ('breve', 'breve.cap'), '_top'),
    'ebreve.sc': ('e.sc', ('breve', 'breve.cap'), '_top'),
    'gbreve.sc': ('g.sc', ('breve', 'breve.cap'), '_top'),
    'ibreve.sc': ('i.sc', ('breve', 'breve.cap'), '_top'),
    'obreve.sc': ('o.sc', ('breve', 'breve.cap'), '_top'),
    'ubreve.sc': ('u.sc', ('breve', 'breve.cap'), '_top'),

    'aring.sc': ('a.sc', ('ring', 'ring.cap'), '_top'),
    'uring.sc': ('u.sc', ('ring', 'ring.cap'), '_top'),

    'gcommaaccent.sc': ('g.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'kcommaaccent.sc': ('k.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'lcommaaccent.sc': ('l.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'ncommaaccent.sc': ('n.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'rcommaaccent.sc': ('r.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'scommaaccent.sc': ('s.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'tcommaaccent.sc': ('t.sc', ('cedilla', 'cedilla.cap'), '_bottom'),

    'aogonek.sc': ('a.sc', ('ogonek', 'ogonek.cap'), '_bottom'),
    'eogonek.sc': ('e.sc', ('ogonek', 'ogonek.cap'), '_bottom'),
    'iogonek.sc': ('i.sc', ('ogonek', 'ogonek.cap'), '_bottom'),
    'uogonek.sc': ('u.sc', ('ogonek', 'ogonek.cap'), '_bottom'),

    'ccedilla.sc': ('c.sc', ('cedilla', 'cedilla.cap'), '_bottom'),
    'scedilla.sc': ('s.sc', ('cedilla', 'cedilla.cap'), '_bottom'),
    'gcedilla.sc': ('g.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'kcedilla.sc': ('k.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'lcedilla.sc': ('l.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'ncedilla.sc': ('n.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),
    'rcedilla.sc': ('r.sc', ('commaaccent', 'commaaccent.cap'), '_bottom'),

    # lowercase
    'agrave': ('a', 'grave', '_top'),
    'egrave': ('e', 'grave', '_top'),
    'igrave': ('dotlessi', 'grave', '_top'),
    'ograve': ('o', 'grave', '_top'),
    'ugrave': ('u', 'grave', '_top'),
    'wgrave': ('w', 'grave', '_top'),
    'ygrave': ('y', 'grave', '_top'),

    'aeacute': ('ae', 'acute', '_top'),
    'aacute': ('a', 'acute', '_top'),
    'cacute': ('c', 'acute', '_top'),
    'eacute': ('e', 'acute', '_top'),
    'iacute': ('dotlessi', 'acute', '_top'),
    'lacute': ('l', 'acute', '_top'),
    'nacute': ('n', 'acute', '_top'),
    'oacute': ('o', 'acute', '_top'),
    'oslashacute': ('oslash', 'acute', '_top'),
    'racute': ('r', 'acute', '_top'),
    'sacute': ('s', 'acute', '_top'),
    'uacute': ('u', 'acute', '_top'),
    'wacute': ('w', 'acute', '_top'),
    'yacute': ('y', 'acute', '_top'),
    'zacute': ('z', 'acute', '_top'),

    'ohungarumlaut': ('o', 'hungarumlaut', '_top'),
    'uhungarumlaut': ('u', 'hungarumlaut', '_top'),

    'cdotaccent': ('c', 'dotaccent', '_top'),
    'edotaccent': ('e', 'dotaccent', '_top'),
    'gdotaccent': ('g', 'dotaccent', '_top'),
    'zdotaccent': ('z', 'dotaccent', '_top'),

    'adieresis': ('a', 'dieresis', '_top'),
    'edieresis': ('e', 'dieresis', '_top'),
    'idieresis': ('dotlessi', 'dieresis', '_top'),
    'odieresis': ('o', 'dieresis', '_top'),
    'udieresis': ('u', 'dieresis', '_top'),
    'wdieresis': ('w', 'dieresis', '_top'),
    'ydieresis': ('y', 'dieresis', '_top'),

    'acircumflex': ('a', 'circumflex', '_top'),
    'ccircumflex': ('c', 'circumflex', '_top'),
    'ecircumflex': ('e', 'circumflex', '_top'),
    'gcircumflex': ('g', 'circumflex', '_top'),
    'hcircumflex': ('h', 'circumflex', '_top'),
    'icircumflex': ('dotlessi', 'circumflex', '_top'),
    'jcircumflex': ('dotlessj', 'circumflex', '_top'),
    'ocircumflex': ('o', 'circumflex', '_top'),
    'scircumflex': ('s', 'circumflex', '_top'),
    'ucircumflex': ('u', 'circumflex', '_top'),
    'wcircumflex': ('w', 'circumflex', '_top'),
    'ycircumflex': ('y', 'circumflex', '_top'),

    'ccaron': ('c', 'caron', '_top'),
    'ecaron': ('e', 'caron', '_top'),
    'ncaron': ('n', 'caron', '_top'),
    'rcaron': ('r', 'caron', '_top'),
    'scaron': ('s', 'caron', '_top'),
    'zcaron': ('z', 'caron', '_top'),
    'dcaron': ('d', 'caronquoteright', '_top'),
    'lcaron': ('l', 'caronquoteright', '_top'),
    'tcaron': ('t', 'caronquoteright', '_top'),

    'amacron': ('a', 'macron', '_top'),
    'emacron': ('e', 'macron', '_top'),
    'imacron': ('dotlessi', 'macron', '_top'),
    'omacron': ('o', 'macron', '_top'),
    'umacron': ('u', 'macron', '_top'),

    'atilde': ('a', 'tilde', '_top'),
    'itilde': ('dotlessi', 'tilde', '_top'),
    'ntilde': ('n', 'tilde', '_top'),
    'otilde': ('o', 'tilde', '_top'),
    'utilde': ('u', 'tilde', '_top'),

    'abreve': ('a', 'breve', '_top'),
    'ebreve': ('e', 'breve', '_top'),
    'gbreve': ('g', 'breve', '_top'),
    'ibreve': ('dotlessi', 'breve', '_top'),
    'obreve': ('o', 'breve', '_top'),
    'ubreve': ('u', 'breve', '_top'),

    'aring': ('a', 'ring', '_top'),
    'uring': ('u', 'ring', '_top'),

    'kcommaaccent': ('k', 'commaaccent', '_bottom'),
    'lcommaaccent': ('l', 'commaaccent', '_bottom'),
    'ncommaaccent': ('n', 'commaaccent', '_bottom'),
    'rcommaaccent': ('r', 'commaaccent', '_bottom'),
    'scommaaccent': ('s', 'commaaccent', '_bottom'),
    'tcommaaccent': ('t', 'cedilla', '_bottom'),
    'gcommaaccent': ('g', 'caronquoteleft', '_top'),

    'ccedilla': ('c', 'cedilla', '_bottom'),
    'scedilla': ('s', 'cedilla', '_bottom'),
    'kcedilla': ('k', 'commaaccent', '_bottom'),
    'lcedilla': ('l', 'commaaccent', '_bottom'),
    'ncedilla': ('n', 'commaaccent', '_bottom'),
    'rcedilla': ('r', 'commaaccent', '_bottom'),
    'gcedilla': ('g', 'caronquoteleft', '_top'),

    'aogonek': ('a', 'ogonek', '_bottom'),
    'eogonek': ('e', 'ogonek', '_bottom'),
    'iogonek': ('i', 'ogonek', '_bottom'),
    'uogonek': ('u', 'ogonek', '_bottom'),

    'ncaron': ('n', 'caronquoteright', '_top'),
    'dcaron': ('d', 'caronquoteright', '_top'),
    'lcaron': ('l', 'caronquoteright', '_top'),
    'tcaron': ('t', 'caronquoteright', '_top')
}

OLD2NEW = {'parenleft.case': 'parenleft.cap',
           'parenright.case': 'parenright.cap',
           'bracketleft.case': 'bracketleft.cap',
           'bracketright.case': 'bracketright.cap',
           'braceleft.case': 'braceleft.cap',
           'braceright.case': 'braceright.cap',
           'guilsinglleft.case': 'guilsinglleft.cap',
           'guilsinglright.case': 'guilsinglright.cap',
           'guillemotleft.case': 'guillemotleft.cap',
           'guillemotright.case': 'guillemotright.cap',
           'hyphen.case': 'hyphen.cap',
           'endash.case': 'endash.cap',
           'emdash.case': 'emdash.cap',
           'plus.case': 'plus.cap',
           'minus.case': 'minus.cap',
           'multiply.case': 'multiply.cap',
           'divide.case': 'divide.cap',
           'equal.case': 'equal.cap',
           'less.case': 'less.cap',
           'greater.case': 'greater.cap',
           'plusminus.case': 'plusminus.cap',
           'lessequal.case': 'lessequal.cap',
           'greaterequal.case': 'greaterequal.cap',
           'notequal.case': 'notequal.cap',
           'logicalnot.case': 'logicalnot.cap',
           'asciitilde.case': 'asciitilde.cap',
           'approxequal.case': 'approxequal.cap',
           'infinity.case': 'infinity.cap',
           'uni2007': 'figurespace',
           'zero.zero': 'slashedzero',
           'zero.tosff': 'zero.tosf',
           'one.tosff': 'one.tosf',
           'two.tosff': 'two.tosf',
           'three.tosff': 'three.tosf',
           'four.tosff': 'four.tosf',
           'five.tosff': 'five.tosf',
           'six.tosff': 'six.tosf',
           'seven.tosff': 'seven.tosf',
           'eight.tosff': 'eight.tosf',
           'nine.tosff': 'nine.tosf',
           'zero.tosff.zero': 'zero.tosf.zero',
           'a.sinf': 'a.inf',
           'a.sups': 'a.sup',
           'a.numr': 'a.num',
           'b.sinf': 'b.inf',
           'b.sups': 'b.sup',
           'b.numr': 'b.num',
           'c.sinf': 'c.inf',
           'c.sups': 'c.sup',
           'c.numr': 'c.num',
           'd.sinf': 'd.inf',
           'd.sups': 'd.sup',
           'd.numr': 'd.num',
           'e.sinf': 'e.inf',
           'e.sups': 'e.sup',
           'e.numr': 'e.num',
           'f.sinf': 'f.inf',
           'f.sups': 'f.sup',
           'f.numr': 'f.num',
           'g.sinf': 'g.inf',
           'g.sups': 'g.sup',
           'g.numr': 'g.num',
           'h.sinf': 'h.inf',
           'h.sups': 'h.sup',
           'h.numr': 'h.num',
           'i.sinf': 'i.inf',
           'i.sups': 'i.sup',
           'i.numr': 'i.num',
           'j.sinf': 'j.inf',
           'j.sups': 'j.sup',
           'j.numr': 'j.num',
           'k.sinf': 'k.inf',
           'k.sups': 'k.sup',
           'k.numr': 'k.num',
           'l.sinf': 'l.inf',
           'l.sups': 'l.sup',
           'l.numr': 'l.num',
           'm.sinf': 'm.inf',
           'm.sups': 'm.sup',
           'm.numr': 'm.num',
           'n.sinf': 'n.inf',
           'n.sups': 'n.sup',
           'n.numr': 'n.num',
           'o.sinf': 'o.inf',
           'o.sups': 'o.sup',
           'o.numr': 'o.num',
           'p.sinf': 'p.inf',
           'p.sups': 'p.sup',
           'p.numr': 'p.num',
           'q.sinf': 'q.inf',
           'q.sups': 'q.sup',
           'q.numr': 'q.num',
           'r.sinf': 'r.inf',
           'r.sups': 'r.sup',
           'r.numr': 'r.num',
           's.sinf': 's.inf',
           's.sups': 's.sup',
           's.numr': 's.num',
           't.sinf': 't.inf',
           't.sups': 't.sup',
           't.numr': 't.num',
           'u.sinf': 'u.inf',
           'u.sups': 'u.sup',
           'u.numr': 'u.num',
           'v.sinf': 'v.inf',
           'v.sups': 'v.sup',
           'v.numr': 'v.num',
           'w.sinf': 'w.inf',
           'w.sups': 'w.sup',
           'w.numr': 'w.num',
           'x.sinf': 'x.inf',
           'x.sups': 'x.sup',
           'x.numr': 'x.num',
           'y.sinf': 'y.inf',
           'y.sups': 'y.sup',
           'y.numr': 'y.num',
           'z.sinf': 'z.inf',
           'z.sups': 'z.sup',
           'z.numr': 'z.num',
           'zero.sinf': 'zero.inf',
           'zero.sups': 'zero.sup',
           'zero.numr': 'zero.num',
           'one.sinf': 'one.inf',
           'one.sups': 'one.sup',
           'one.numr': 'one.num',
           'two.sinf': 'two.inf',
           'two.sups': 'two.sup',
           'two.numr': 'two.num',
           'three.sinf': 'three.inf',
           'three.sups': 'three.sup',
           'three.numr': 'three.num',
           'four.sinf': 'four.inf',
           'four.sups': 'four.sup',
           'four.numr': 'four.num',
           'five.sinf': 'five.inf',
           'five.sups': 'five.sup',
           'five.numr': 'five.num',
           'six.sinf': 'six.inf',
           'six.sups': 'six.sup',
           'six.numr': 'six.num',
           'seven.sinf': 'seven.inf',
           'seven.sups': 'seven.sup',
           'seven.numr': 'seven.num',
           'eight.sinf': 'eight.inf',
           'eight.sups': 'eight.sup',
           'eight.numr': 'eight.num',
           'nine.sinf': 'nine.inf',
           'nine.sups': 'nine.sup',
           'nine.numr': 'nine.num',
           'dollar.sinf': 'dollar.inf',
           'dollar.sups': 'dollar.sup',
           'dollar.numr': 'dollar.num',
           'cent.sinf': 'cent.inf',
           'cent.sups': 'cent.sup',
           'cent.numr': 'cent.num',
           'Euro.sinf': 'Euro.inf',
           'Euro.sups': 'Euro.sup',
           'Euro.numr': 'Euro.num',
           'plus.sinf': 'plus.inf',
           'plus.sups': 'plus.sup',
           'plus.numr': 'plus.num',
           'minus.sinf': 'minus.inf',
           'minus.sups': 'minus.sup',
           'minus.numr': 'minus.num',
           'equal.sinf': 'equal.inf',
           'equal.sups': 'equal.sup',
           'equal.numr': 'equal.num',
           'period.sinf': 'period.inf',
           'period.sups': 'period.sup',
           'period.numr': 'period.num',
           'comma.sinf': 'comma.inf',
           'comma.sups': 'comma.sup',
           'comma.numr': 'comma.num',
           'hyphen.sinf': 'hyphen.inf',
           'hyphen.sups': 'hyphen.sup',
           'hyphen.numr': 'hyphen.num',
           'parenleft.sinf': 'parenleft.inf',
           'parenleft.sups': 'parenleft.sup',
           'parenleft.numr': 'parenleft.num',
           'parenright.sinf': 'parenright.inf',
           'parenright.sups': 'parenright.sup',
           'parenright.numr': 'parenright.num',
           'uni2155': 'onefifth',
           'uni2156': 'twofifths',
           'uni2157': 'threefifths',
           'uni2158': 'fourfifths',
           'uni2159': 'onesixth',
           'uni215A': 'fivesixths',
           'oneeighth': 'oneeight',
           'threeeighths': 'threeeights',
           'fiveeighths': 'fiveeights',
           'seveneighths': 'seveneights',
           'uniFB03': 'ffi',
           'uniFB04': 'ffl',
           'zero.sc.zero': 'slashedzero.sc'}

NEW2OLD = {value: key for key, value in OLD2NEW.items()}
